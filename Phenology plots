---
title: "Cumulative_phenology_dot_plot"
output: html_notebook
---

AIM: to plot cumulative phenology as dot plot for three years (2018 to 2020).
Two separate graphs for MF and nMF species

```{r}
library(readxl)
Pheno_data <- read_excel("Phenology_DotPlot_data_2025.xlsx",sheet = "Phenology_Data_all species")

#taking subset of MF and nMF species
Pheno_data_MF <- Pheno_data[Pheno_data$MF_nMF == "MF",]
#removed census points that do not have any data for MF species
Pheno_data_MF <- Pheno_data_MF[,-c(6:8)]

Pheno_data_nMF <- Pheno_data[Pheno_data$MF_nMF == "nMF",]

```



plotting only MF species
Log format and preparing the data for plotting
```{r}
#for MF species
#converting data into long form
library(reshape2)
Pheno_data_MFL = melt(Pheno_data_MF, id.vars = c("Year","Colour_groups", "Flowering_species","Species_code","MF_nMF"))
#replacing all zeros with NA
Pheno_data_MFL[Pheno_data_MFL == 0] <- NA


#temporarily, save the output as csv to clearly mark the line numbers
write.csv(Pheno_data_MFL, file = "pheno_MF.csv", na = "NA", row.names = TRUE)

#Removing all census where phenology values were not taken
#Pheno_data_MFL = Pheno_data_MFL[- c(1:182, 201:232, 251:282, 301:332, 351:382, 451:467, 601:617, 751:767, 801:817, 851:882, 918:950),]
```


Giving the new order to species
```{r}
#sequence for species sorting
library(readxl)
seq_sp_font2 <- read_excel("Phenology_DotPlot_data_2025.xlsx",sheet = "Species sorting_MF")
```

Plotting

```{r}

library(ggplot2)
library(extrafont)


p = ggplot(Pheno_data_MFL, aes(x= variable, y=Species_code, color=Colour_groups, size= as.numeric(value))) +
  #geom_point()+
  geom_hline(yintercept = 1:21, linetype="dashed", color = "gray90", size=0.5)+
  
  #geom_segment(aes(yend = Species_code), xend=0, colour="grey90", size = 0.3) +
 
  geom_point(alpha = .8)+
  
  #faceting
  facet_grid(. ~ Year, scales = "free_x", space = "free_x")+
  
  #adding the classic theme
  theme_bw()+
  
  #manual colours to dot
  scale_color_manual(values=c('#7a3e8d','#748891','#ffb343'))+
  
  #changing legend title
  guides(color = guide_legend(title = "Floral colour groups"))+
  guides(size = guide_legend(title = "Floral abundance"))+
  
  #title
  ggtitle("Phenology of species with mass flowering display from 2018 to 2020")+
  theme(plot.title = element_text(hjust = 0.5))+
  
  #changing panal background
  #theme(panel.background = element_rect(fill = "white"))+
  #remove vertical and horizontal grid lines
  theme(panel.grid.major.x = element_blank(),
        panel.grid.major.y = element_blank())+
  
  #Changing axis text, fontface, andgle, etc
  theme(axis.text.x = element_text(face="bold", color="black", angle = 45, hjust = 1))+
  theme(axis.text.y = element_text(face="italic", color="black", size = 11))+
  
  xlab("Phenology census") + ylab("Mass flowering species (MF)")+
  
  #theme for legend
  theme(legend.position = "right",legend.background = element_rect(fill = "white"), legend.text=element_text(color= "black"))+
  theme(legend.text=element_text(size = 14, face = "bold", color= "black"),legend.key = element_rect(fill = "white"),legend.title = element_text(size = 14, face = "bold", colour = "black"))+

  
  #giving specific sequence to y axis
  scale_y_discrete(name = "Species with mass flowering", limits = rev(seq_sp_font2$Species_code))+ #rev function reverses the order; this is because R starts the order from the bottom 

  #changing fonts across all texts
  theme(axis.text.y = element_text(family = "Times New Roman", face = "bold", color = "black")) +
theme(axis.text.x = element_text(family = "Times New Roman", color = "black")) +
theme(text = element_text(family = "Times New Roman")) +
theme(strip.text.x = element_text(size = 12)) +
theme(axis.title.x = element_text(color = "black", face = "bold", size = 15), 
      axis.title.y = element_text(color = "black", face = "bold", size = 15)) +
theme(legend.position = "bottom") +
theme(legend.title = element_text(size = 12), legend.text = element_text(size = 10))
  
p


ggsave("Edited_MF_phenology_dot_plot_2025.png", p, width = 10, height = 7.5, units = "in", dpi = 300)
```


plotting only nMF species

preparing the data for plotting
```{r}
#for MF species
#converting data into long form
library(reshape2)
Pheno_data_nMFL = melt(Pheno_data_nMF, id.vars = c("Year","Colour_groups", "Flowering_species","Species_code","MF_nMF"))
#replacing all zeros with NA
Pheno_data_nMFL[Pheno_data_nMFL == 0] <- NA


#temporarily, save the output as csv to clearly mark the line numbers
write.csv(Pheno_data_nMFL, file = "pheno_nMF.csv", na = "NA", row.names = TRUE)

#Removing all census where phenology values were not taken
#Pheno_data_nMFL = Pheno_data_nMFL[- c(1:64, 106:169, 211:274, 316:379, 421:484, 526:589, 631:694, 736:799, 946:981, 1261:1296, 1576:1611, 1681:1716, 1786:1849, 1927:1995),]
```


Giving the new order to species
```{r}
#sequence for species sorting
library(readxl)
seq_sp_font2 <- read_excel("Phenology_DotPlot_data_2025.xlsx",sheet = "Species sorting_nMF")
```


```{r}
library(ggplot2)
library(extrafont)


p = ggplot(Pheno_data_nMFL, aes(x= variable, y=Species_code, color=Colour_groups, size= as.numeric(value))) +
  #geom_point()+
  geom_hline(yintercept = 1:58, linetype="dashed", color = "gray90", size=0.5)+
  
  #geom_segment(aes(yend = Species_code), xend=0, colour="grey90", size = 0.3) +
 
  geom_point(alpha = .8)+
  
  #faceting
  facet_grid(. ~ Year, scales = "free_x", space = "free_x")+
  
  #adding the classic theme
  theme_bw()+
  
  #manual colours to dot
  scale_color_manual(values=c('#7a3e8d','#748891','#ffb343'))+
  
  #changing legend title
  guides(color = guide_legend(title = "Floral colour groups"))+
  guides(size = guide_legend(title = "Floral abundance"))+
  
  #title
  ggtitle("Flowering phenology of species without mass flowering display from 2018 to 2020")+
  theme(plot.title = element_text(hjust = 0.5))+
  
  #changing panal background
  #theme(panel.background = element_rect(fill = "white"))+
  #remove vertical and horizontal grid lines
  theme(panel.grid.major.x = element_blank(),
        panel.grid.major.y = element_blank())+
  
  #Changing axis text, fontface, andgle, etc
  theme(axis.text.x = element_text(face="bold", color="black", angle = 45, hjust = 1))+
  theme(axis.text.y = element_text(face="italic", color="black", size = 11))+
  
  xlab("Phenology census") + ylab("Non-mass flowering species (nMF)")+
  
 #theme for legend
  theme(legend.position = "right",legend.background = element_rect(fill = "white"), legend.text=element_text(color= "black"))+
  theme(legend.text=element_text(size = 14, face = "bold", color= "black"),legend.key = element_rect(fill = "white"),legend.title = element_text(size = 14, face = "bold", colour = "black"))+
  
  #giving specific sequence to y axis
  scale_y_discrete(name = "Species without mass flowering display (nMF)", limits = rev(seq_sp_font2$Species_code))+ #rev function reverses the order; this is because R starts the order from the bottom 

  #changing fonts across all texts
  theme(axis.text.y = element_text(family = "Times New Roman", face = "bold", color = "black")) +
theme(axis.text.x = element_text(family = "Times New Roman", color = "black")) +
theme(text = element_text(family = "Times New Roman")) +
theme(strip.text.x = element_text(size = 12)) +
theme(axis.title.x = element_text(color = "black", face = "bold", size = 15), 
      axis.title.y = element_text(color = "black", face = "bold", size = 15)) +
theme(legend.position = "bottom") +
theme(legend.title = element_text(size = 12), legend.text = element_text(size = 10))
  
p


ggsave("Edited_nMF_phenology_dot_plot_2025.png", p, width = 10, height = 12, units = "in", dpi = 300)
```
